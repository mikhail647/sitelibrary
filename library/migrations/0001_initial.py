# Generated by Django 5.2 on 2025-04-15 10:02

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='BookAuthor',
            fields=[
                ('author_id', models.AutoField(primary_key=True, serialize=False)),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('middle_name', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'verbose_name': 'Автор',
                'verbose_name_plural': 'Авторы',
                'db_table': 'book_authors',
            },
        ),
        migrations.CreateModel(
            name='LibraryLocation',
            fields=[
                ('location_id', models.AutoField(primary_key=True, serialize=False)),
                ('location_name', models.CharField(max_length=100)),
                ('location_type', models.CharField(choices=[('loan', 'Абонемент'), ('reading_room', 'Читальный зал')], max_length=15)),
                ('address', models.CharField(max_length=200)),
            ],
            options={
                'verbose_name': 'Пункт выдачи',
                'verbose_name_plural': 'Пункты выдачи',
                'db_table': 'library_locations',
            },
        ),
        migrations.CreateModel(
            name='LibraryReader',
            fields=[
                ('reader_id', models.AutoField(primary_key=True, serialize=False)),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('middle_name', models.CharField(blank=True, max_length=50, null=True)),
                ('library_card_number', models.CharField(max_length=20, unique=True)),
                ('registration_date', models.DateField()),
                ('reader_status', models.CharField(choices=[('active', 'Активен'), ('suspended', 'Приостановлен'), ('expelled', 'Исключен')], default='active', max_length=10)),
                ('suspension_end_date', models.DateField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Читатель',
                'verbose_name_plural': 'Читатели',
                'db_table': 'library_readers',
            },
        ),
        migrations.CreateModel(
            name='ReaderType',
            fields=[
                ('type_id', models.AutoField(primary_key=True, serialize=False)),
                ('type_name', models.CharField(max_length=50)),
                ('max_books_allowed', models.IntegerField()),
                ('loan_period_days', models.IntegerField()),
                ('can_use_reading_room', models.BooleanField(default=True)),
                ('can_use_loan', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Тип читателя',
                'verbose_name_plural': 'Типы читателей',
                'db_table': 'reader_types',
            },
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.BooleanField(default=False)),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('role', models.CharField(choices=[('user', 'Пользователь'), ('staff', 'Сотрудник'), ('admin', 'Администратор')], default='user', max_length=10)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
                'db_table': 'custom_user',
            },
        ),
        migrations.CreateModel(
            name='BookAuthorRelation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('author', models.ForeignKey(db_column='author_id', on_delete=django.db.models.deletion.CASCADE, to='library.bookauthor')),
            ],
            options={
                'verbose_name': 'Связь книга-автор',
                'verbose_name_plural': 'Связи книга-автор',
                'db_table': 'book_author_relations',
            },
        ),
        migrations.CreateModel(
            name='BookCatalog',
            fields=[
                ('book_id', models.AutoField(primary_key=True, serialize=False)),
                ('book_title', models.CharField(max_length=200)),
                ('isbn', models.CharField(blank=True, max_length=13, null=True, unique=True)),
                ('publication_year', models.IntegerField(blank=True, null=True)),
                ('publisher_name', models.CharField(blank=True, max_length=100, null=True)),
                ('acquisition_date', models.DateField()),
                ('book_status', models.CharField(choices=[('available', 'Доступна'), ('lost', 'Утеряна'), ('damaged', 'Повреждена')], default='available', max_length=10)),
                ('authors', models.ManyToManyField(related_name='books', through='library.BookAuthorRelation', to='library.bookauthor')),
            ],
            options={
                'verbose_name': 'Книга (каталог)',
                'verbose_name_plural': 'Книги (каталог)',
                'db_table': 'book_catalog',
            },
        ),
        migrations.AddField(
            model_name='bookauthorrelation',
            name='book',
            field=models.ForeignKey(db_column='book_id', on_delete=django.db.models.deletion.CASCADE, to='library.bookcatalog'),
        ),
        migrations.CreateModel(
            name='BookCopy',
            fields=[
                ('copy_id', models.AutoField(primary_key=True, serialize=False)),
                ('inventory_number', models.CharField(max_length=50, unique=True)),
                ('copy_status', models.CharField(choices=[('available', 'Доступен'), ('issued', 'Выдан'), ('lost', 'Утерян'), ('damaged', 'Поврежден')], default='available', max_length=10)),
                ('book', models.ForeignKey(db_column='book_id', on_delete=django.db.models.deletion.CASCADE, related_name='copies', to='library.bookcatalog')),
                ('location', models.ForeignKey(db_column='location_id', on_delete=django.db.models.deletion.PROTECT, to='library.librarylocation')),
            ],
            options={
                'verbose_name': 'Экземпляр книги',
                'verbose_name_plural': 'Экземпляры книг',
                'db_table': 'book_copies',
            },
        ),
        migrations.CreateModel(
            name='BookLoan',
            fields=[
                ('loan_id', models.AutoField(primary_key=True, serialize=False)),
                ('loan_date', models.DateField()),
                ('due_date', models.DateField()),
                ('return_date', models.DateField(blank=True, null=True)),
                ('loan_status', models.CharField(choices=[('active', 'Активна'), ('returned', 'Возвращена'), ('overdue', 'Просрочена'), ('lost', 'Утеряна')], default='active', max_length=10)),
                ('copy', models.ForeignKey(db_column='copy_id', on_delete=django.db.models.deletion.PROTECT, to='library.bookcopy')),
                ('location', models.ForeignKey(db_column='location_id', on_delete=django.db.models.deletion.PROTECT, to='library.librarylocation')),
            ],
            options={
                'verbose_name': 'Выдача книги',
                'verbose_name_plural': 'Выдачи книг',
                'db_table': 'book_loans',
            },
        ),
        migrations.CreateModel(
            name='InterlibraryRequest',
            fields=[
                ('request_id', models.AutoField(primary_key=True, serialize=False)),
                ('request_date', models.DateField()),
                ('request_status', models.CharField(choices=[('pending', 'Ожидает'), ('approved', 'Одобрен'), ('received', 'Получен'), ('returned', 'Возвращен')], default='pending', max_length=10)),
                ('book', models.ForeignKey(db_column='book_id', on_delete=django.db.models.deletion.CASCADE, to='library.bookcatalog')),
            ],
            options={
                'verbose_name': 'Запрос МБА',
                'verbose_name_plural': 'Запросы МБА',
                'db_table': 'interlibrary_requests',
            },
        ),
        migrations.CreateModel(
            name='StaffReader',
            fields=[
                ('reader', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='library.libraryreader')),
                ('department_name', models.CharField(max_length=100)),
                ('job_position', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name': 'Читатель-сотрудник',
                'verbose_name_plural': 'Читатели-сотрудники',
                'db_table': 'staff_readers',
            },
        ),
        migrations.CreateModel(
            name='StudentReader',
            fields=[
                ('reader', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='library.libraryreader')),
                ('faculty_name', models.CharField(max_length=100)),
                ('group_number', models.CharField(max_length=20)),
                ('course_number', models.IntegerField()),
            ],
            options={
                'verbose_name': 'Читатель-студент',
                'verbose_name_plural': 'Читатели-студенты',
                'db_table': 'student_readers',
            },
        ),
        migrations.CreateModel(
            name='TeacherReader',
            fields=[
                ('reader', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='library.libraryreader')),
                ('department_name', models.CharField(max_length=100)),
                ('academic_degree', models.CharField(blank=True, max_length=50, null=True)),
                ('academic_title', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'verbose_name': 'Читатель-преподаватель',
                'verbose_name_plural': 'Читатели-преподаватели',
                'db_table': 'teacher_readers',
            },
        ),
        migrations.CreateModel(
            name='TemporaryReader',
            fields=[
                ('reader', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='library.libraryreader')),
                ('reader_type', models.CharField(choices=[('FPC', 'Слушатель ФПК'), ('applicant', 'Абитуриент'), ('intern', 'Стажер')], max_length=10)),
            ],
            options={
                'verbose_name': 'Временный читатель',
                'verbose_name_plural': 'Временные читатели',
                'db_table': 'temporary_readers',
            },
        ),
        migrations.AddField(
            model_name='libraryreader',
            name='user',
            field=models.ForeignKey(blank=True, db_column='user_id', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='LibraryFine',
            fields=[
                ('fine_id', models.AutoField(primary_key=True, serialize=False)),
                ('fine_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('fine_date', models.DateField()),
                ('fine_status', models.CharField(choices=[('pending', 'Ожидает оплаты'), ('paid', 'Оплачен'), ('cancelled', 'Списан')], default='pending', max_length=10)),
                ('fine_reason', models.CharField(choices=[('overdue', 'Просрочка'), ('lost', 'Утеря'), ('damaged', 'Повреждение')], max_length=10)),
                ('loan', models.ForeignKey(blank=True, db_column='loan_id', null=True, on_delete=django.db.models.deletion.SET_NULL, to='library.bookloan')),
                ('request', models.ForeignKey(blank=True, db_column='request_id', null=True, on_delete=django.db.models.deletion.SET_NULL, to='library.interlibraryrequest')),
                ('reader', models.ForeignKey(db_column='reader_id', on_delete=django.db.models.deletion.PROTECT, to='library.libraryreader')),
            ],
            options={
                'verbose_name': 'Штраф',
                'verbose_name_plural': 'Штрафы',
                'db_table': 'library_fines',
            },
        ),
        migrations.AddField(
            model_name='interlibraryrequest',
            name='reader',
            field=models.ForeignKey(db_column='reader_id', on_delete=django.db.models.deletion.CASCADE, to='library.libraryreader'),
        ),
        migrations.AddField(
            model_name='bookloan',
            name='reader',
            field=models.ForeignKey(db_column='reader_id', on_delete=django.db.models.deletion.PROTECT, to='library.libraryreader'),
        ),
        migrations.CreateModel(
            name='ReaderRegistration',
            fields=[
                ('registration_id', models.AutoField(primary_key=True, serialize=False)),
                ('registration_date', models.DateField()),
                ('registration_expiry_date', models.DateField()),
                ('location', models.ForeignKey(db_column='location_id', on_delete=django.db.models.deletion.CASCADE, to='library.librarylocation')),
                ('reader', models.ForeignKey(db_column='reader_id', on_delete=django.db.models.deletion.CASCADE, to='library.libraryreader')),
            ],
            options={
                'verbose_name': 'Регистрация читателя в пункте',
                'verbose_name_plural': 'Регистрации читателей в пунктах',
                'db_table': 'reader_registrations',
            },
        ),
        migrations.AddField(
            model_name='libraryreader',
            name='reader_type',
            field=models.ForeignKey(db_column='reader_type_id', on_delete=django.db.models.deletion.PROTECT, to='library.readertype'),
        ),
        migrations.AlterUniqueTogether(
            name='bookauthorrelation',
            unique_together={('book', 'author')},
        ),
    ]
